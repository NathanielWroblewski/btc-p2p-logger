{
  "name": "p2p-node",
  "version": "0.1.1",
  "description": "Create a peer-to-peer relationship",
  "keywords": [
    "p2p",
    "network",
    "peers",
    "cryptography"
  ],
  "main": "./lib/Peer.js",
  "dependencies": {
    "sha256": "0.1.x"
  },
  "devDependencies": {
    "mocha": "1.*"
  },
  "repository": {
    "url": "https://github.com/cryptocoinjs/p2p-node",
    "type": "git"
  },
  "author": {
    "name": "Brooks Boyd",
    "email": "boydb@midnightdesign.ws"
  },
  "readme": "# P2P Node\nLow-level library to handle peer-to-peer traffic on Cryptcurrency networks. A raw `socket` object in Node emits `data` events whenever the stream is updated. This library sits on top of a raw socket connection, and instead of emitting `data` events every time the stream updates, it waits and emits `message` events whenever a complete message has arrived.\n\nIt uses the [Bitcoin protocol structure](https://en.bitcoin.it/wiki/Protocol_specification#Message_structure) to parse incoming messages; any stream that's encoded as follows can be parsed:\n\n* **4 bytes: Uint32:** Magic Bytes: Flag the beginning of a message\n* **12 bytes: Char:** ASCII string identifying the message type, null-padded to 12 characters long\n* **4 bytes: Uint32:** Payload length\n* **4 bytes: Uint32:** Checksum: First four bytes of `sha256(sha256(payload))`\n* **variable bytes:** Payload data\n\nThe default Magic Bytes and default Port to connect to are set to the Bitcoin protocol. \n\n## Usage\n\n```js\nvar Peer = require('Peer').Peer;\n\nvar p = new Peer('remote.node.com');\np.on('connect', function(d) {\n  console.log(\"I'm connected!\");\n});\np.on('message', function(d) {\n  console.log(\"I got message \"+d.command);\n});\n```\n\n`Peer` is an [EventEmitter](http://nodejs.org/api/events.html) with the following events:\n\n## Events\n\n### `connect`\nWhen the socket connects\n\nData object passed to listeners:\n\n```\n{\n  peer: Peer\n}\n```\n\n### `error`\nIf the socket errors out\n\nData object passed to listeners:\n\n```\n{\n  peer: Peer,\n  error: Error object from Socket\n}\n```\n\n### `end`\nWhen the socket disconnects\n\nData object passed to listeners:\n\n```\n{\n  peer: Peer\n}\n```\n\n### `message`\nWhen a complete message has arrived\n\nData object passed to listeners:\n\n```\n{\n  peer: Peer,\n  command: String,\n  data: Raw payload as binary data\n}\n```\n\n### `commandMessage`\nAn alternate version of the `peerMessage` event; in these events, the command of the message is used as the event name (i.e. command `'foo'` would cause a `fooMessage` event).\n\n```\n{\n\tpeer: Peer,\n\tdata: Raw payload as binary data\n}\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/cryptocoinjs/p2p-node/issues"
  },
  "_id": "p2p-node@0.1.1",
  "_from": "p2p-node@0.1.x"
}
